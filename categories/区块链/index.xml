<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>区块链 on Home</title>
    <link>https://jopinfly.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/</link>
    <description>Recent content in 区块链 on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2018</copyright>
    <lastBuildDate>Mon, 13 May 2019 10:51:10 +0800</lastBuildDate>
    
	<atom:link href="https://jopinfly.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>区块链钱包-私钥与地址</title>
      <link>https://jopinfly.github.io/blog/2019/05/13/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85-%E7%A7%81%E9%92%A5%E4%B8%8E%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Mon, 13 May 2019 10:51:10 +0800</pubDate>
      
      <guid>https://jopinfly.github.io/blog/2019/05/13/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85-%E7%A7%81%E9%92%A5%E4%B8%8E%E5%9C%B0%E5%9D%80/</guid>
      <description>私钥 私钥(yuè)本质上是一个256位随机数。 那么什么是256位随机数呢？首先256位是指由256个0或1组成，如：1001001010001...，其次随机是指某一位上是0或1是随机没有规律的。举个例子，A想获得一个独属于自己的比特币私钥，那么他可以通过掷硬币来生成，正面朝上是1，反面朝上是0，掷了256次之后，他得到了一个数字序列，即为A的私钥。 看到这里，你可能会想，私钥的规则也太随意了吧，我随便写个数，只要不超过最大值，就是一个私钥？或者万一别人随机出了我的私钥，不是可以把我的资产拿走吗？ 你想的没错，以上两个问题的答案都是肯定的&amp;hellip; 但是，即使私钥只是一个数字，它仍然非常非常非常难以被破解！它的安全性来自于它包含的数字集合非常大，大到难以去穷尽所有数字，并进行一一验证。即使存在客观的重复的概率，但我们仍然可以称私钥在密码学上是安全的。如果你仍然心存疑虑，那么我们可以感性的感受下： ○ 私钥共有2^256个可能，近似于10⁷⁷。 ○ 到目前为止，人类可观测的宇宙中的原子数约为10⁸⁰； ○ &amp;ldquo;双色球&amp;rdquo;一等奖的中奖概率是8×10ˉ⁸； ok，我们现在知道了比特币的安全来自于非常严格的随机性，可以说我们选取的随机算法的强度影响了我们资产的安全性。使用一个可能会被预测的随机算法，不如掷硬币&amp;hellip;
Tips！ 如前文所述，私钥的本体就是一个数字，本身是不容易记忆和抄录的。为了便于使用，大部分钱包会对私钥进行编码，方便用户进行导入导出操作。目前主流的格式有HEX、WIF、WIF-compressed等。
地址 在传统银行用户模型中，用户需要账号+密码来操控自己的资产。而在比特币体系中，资产其实是存在每个私钥下的，用户只需要私钥即可以完全操控自己的资产。私钥的隐私性太强，是不可能让别人得知的，那么如何实现在不暴露自己私钥的前提下，让别人给自己转账呢？地址应运而生。 通过椭圆曲线算法（ECDSA），私钥可以计算出一个唯一且不可逆的公钥， 公钥通过特定的哈希计算得到公钥哈希，在对公钥哈希进行编码，即可得到地址。简单来说，因为公钥本身太长了，不利于交易的进行，所以通过一些变换得到地址。地址就是公钥的一种表现形式。 在比特币体系中，生成一个地址的流程大致为： 可以看出，比特币用于公开交易的地址是由公钥进行一系列数学计算得来的。顺理成章的，如果改变其中的哈希算法或者编码方式，就可以得到一个不同的结果，也就是一个新地址！这个特性使得一个私钥管理多种加密货币变为可能： ○ A私钥-&amp;gt;A公钥-比特币地址算法-&amp;gt;比特币地址 ○ A私钥-&amp;gt;A公钥-以太坊地址算法-&amp;gt;以太坊地址 ○ &amp;hellip;
Tips！ 为什么比特币地址要采用Base58编码呢？与Base64的是，Base58去掉了几个看起来可能会产生歧义的字母，如0(零)、O(大写字母O)、I(大写的字母i) 和 l(小写的字母L)，以及两个影响双击选择的字符，如/和+。在设计层面尽可能降低地址输错带来的资金损失。</description>
    </item>
    
    <item>
      <title>区块链钱包-预备！</title>
      <link>https://jopinfly.github.io/blog/2018/03/21/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85-%E9%A2%84%E5%A4%87/</link>
      <pubDate>Wed, 21 Mar 2018 10:51:10 +0800</pubDate>
      
      <guid>https://jopinfly.github.io/blog/2018/03/21/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85-%E9%A2%84%E5%A4%87/</guid>
      <description>什么是加密货币 　加密货币是一种使用密码学原理来确保交易安全及控制交易单位创造出的交易媒介，其基于去中心化的共识机制，与依赖中心化监管体系的银行金融系统相对。 以比特币为例，其作为一种货币单位被用于存储和传输比特币网络中参与者之间的价值，用户可以通过网络传输比特币，就像操作常规货币一样去完成交易。作为一种分布式对等系统，在没有中央服务器或控制后台的情况下，比特币是通过发行新币来激励用户贡献自己计算机的处理能力去验证和记录其余的交易，这种分散了中央银行货币发行和结算能力的过程，被形象的称为“挖矿”。 比特币中包含了四个关键创新： ○ 去中心化的对等网络（比特币协议） ○ 公共交易总帐（区块链） ○ 独立交易确认和货币发行的一套规则（共识规则） ○ 有效的区块链全球去中心化共识机制（工作量证明算法）
什么是区块链钱包 　区块链钱包作为一种电子钱包，管理着你的虚拟财产，是将你和区块链连接起来的入口。一般来说，钱包会完全的访问你的私有财产，即你需要向钱包提供你的私钥，相当于将你的银行账号和密码都提供给了一无所知的第三方，可想而知，钱包的作恶成本极低。 因为目前业界各个钱包提供商业务切入点的不同，市面上的钱包形态多种多样，这里简单介绍两种常见概念：  去中心化钱包 顾名思义，这是一种将核心业务逻辑运行在终端设备上的钱包。用户将自己持有私钥，管理地址，签名交易。这样做对用户的好处是资产安全性高，隐私性也很好。 但是我认为在商业上，目前去中心化的路线并不好走，这种模式拥有突出的优点，也拥有不少绕不过的缺陷： ○ 需要通过开源来争取用户信任 ○ 新概念繁多，用户学习成本极高 ○ 密钥丢失，无人能恢复资产 ○ 每笔交易均需要矿工费，均需要区块链确认 ○ 产生碎币的可能性增加 ○ 无用户信息，商业运营不精准 中心化钱包 这种形态的钱包很好理解，可以类比成银行。用户将资产托管给了提供商，无需操心助记词、私钥、公钥等概念，轻松就可以操作自己的资产。即使忘记了密码，也可以轻松找回。 大部分的交易所钱包都选择了这种方案，不仅有完整的用户体系，更使得用户内部转账无需支付矿工费，无需区块链确认，大大节省了资金成本和时间成本，便于交易。 同样，中心化钱包也有一些缺陷和风险点： ○ 提供商可能需要机构背书，增加可信度，与区块链精神有那么一点点矛盾 ○ 存放的币数量大，价值高，容易成为攻击目标 ○ 用户需要承担提供商跑路的风险 我个人比较推荐使用冷热钱包方案，准备长期持有储备的冷钱放在去中心化钱包里，预计会频繁交易的热钱放在中心化钱包里。
要做什么 　本系列将基于去中心化模型，旨在从概念和原理出发，分析一次完整的比特币交易，尽力定位出钱包的角色，预计会包括四个模块： ○ 如何生成一个私钥及配对的地址 ○ 如何获取地址余额 ○ 如何构造一笔交易 ○ 如何使用私钥进行签名 希望本系列能让读者对区块链钱包有个直观的认识。</description>
    </item>
    
  </channel>
</rss>